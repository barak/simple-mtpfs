From: "Barak A. Pearlmutter" <barak+git@pearlmutter.net>
Date: Sat, 18 Jul 2020 20:01:49 +0100
Subject: update autotools scripts

---
 configure.ac    |   8 ++---
 m4/cxx11.m4     | 107 --------------------------------------------------------
 src/makefile.am |   4 +--
 3 files changed, 6 insertions(+), 113 deletions(-)
 delete mode 100644 m4/cxx11.m4

diff --git a/configure.ac b/configure.ac
index 44dab36..857bcdc 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3,16 +3,16 @@ AC_INIT([simple-mtpfs],[0.3.0],[phatina@gmail.com])
 
 AC_CONFIG_MACRO_DIR([m4])
 
-AM_INIT_AUTOMAKE([foreign dist-bzip2])
-AC_CONFIG_HEADERS(config.h)
-AM_SILENT_RULES([yes])
+AM_INIT_AUTOMAKE([foreign dist-bzip2 -Wall])
+AC_CONFIG_SRCDIR([src/simple-mtpfs-fuse.cpp])
+AC_CONFIG_HEADERS([config.h])
 
 AC_LANG([C++])
 AC_PROG_CXX
 AC_PROG_INSTALL
 
-m4_include([m4/cxx11.m4])
 AX_CXX_COMPILE_STDCXX_11([noext])
+AX_CXXFLAGS_WARN_ALL
 AC_CHECK_LIB([mtp], [LIBMTP_Init], [], [AC_MSG_ERROR([libmtp not found])])
 AC_CHECK_LIB([mtp], [LIBMTP_Check_Capability],
     [AC_DEFINE([HAVE_LIBMTP_CHECK_CAPABILITY], [1], [Check device capabilities])],
diff --git a/m4/cxx11.m4 b/m4/cxx11.m4
deleted file mode 100644
index 0d96c07..0000000
--- a/m4/cxx11.m4
+++ /dev/null
@@ -1,107 +0,0 @@
-# ============================================================================
-#  http://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx_11.html
-# ============================================================================
-#
-# SYNOPSIS
-#
-#   AX_CXX_COMPILE_STDCXX_11([ext|noext])
-#
-# DESCRIPTION
-#
-#   Check for baseline language coverage in the compiler for the C++11
-#   standard; if necessary, add switches to CXXFLAGS to enable support.
-#   Errors out if no mode that supports C++11 baseline syntax can be found.
-#   The argument, if specified, indicates whether you insist on an extended
-#   mode (e.g. -std=gnu++11) or a strict conformance mode (e.g. -std=c++11).
-#   If neither is specified, you get whatever works, with preference for an
-#   extended mode.
-#
-# LICENSE
-#
-#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>
-#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>
-#
-#   Copying and distribution of this file, with or without modification, are
-#   permitted in any medium without royalty provided the copyright notice
-#   and this notice are preserved. This file is offered as-is, without any
-#   warranty.
-
-#serial 1
-
-m4_define([_AX_CXX_COMPILE_STDCXX_11_testbody], [
-  template <typename T>
-    struct check
-    {
-      static_assert(sizeof(int) <= sizeof(T), "not big enough");
-    };
-
-    typedef check<check<bool>> right_angle_brackets;
-
-    int a;
-    decltype(a) b;
-
-    typedef check<int> check_type;
-    check_type c;
-    check_type&& cr = static_cast<check_type&&>(c);
-])
-
-AC_DEFUN([AX_CXX_COMPILE_STDCXX_11], [dnl
-  m4_if([$1], [], [],
-        [$1], [ext], [],
-        [$1], [noext], [],
-        [m4_fatal([invalid argument `$1' to AX_CXX_COMPILE_STDCXX_11])])dnl
-  AC_LANG_ASSERT([C++])dnl
-  ac_success=no
-  AC_CACHE_CHECK(whether $CXX supports C++11 features by default,
-  ax_cv_cxx_compile_cxx11,
-  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_11_testbody])],
-    [ax_cv_cxx_compile_cxx11=yes],
-    [ax_cv_cxx_compile_cxx11=no])])
-  if test x$ax_cv_cxx_compile_cxx11 = xyes; then
-    ac_success=yes
-  fi
-
-  m4_if([$1], [noext], [], [dnl
-  if test x$ac_success = xno; then
-    for switch in -std=gnu++11 -std=gnu++0x; do
-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx11_$switch])
-      AC_CACHE_CHECK(whether $CXX supports C++11 features with $switch,
-                     $cachevar,
-        [ac_save_CXXFLAGS="$CXXFLAGS"
-         CXXFLAGS="$CXXFLAGS $switch"
-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_11_testbody])],
-          [eval $cachevar=yes],
-          [eval $cachevar=no])
-         CXXFLAGS="$ac_save_CXXFLAGS"])
-      if eval test x\$$cachevar = xyes; then
-        CXXFLAGS="$CXXFLAGS $switch"
-        ac_success=yes
-        break
-      fi
-    done
-  fi])
-
-  m4_if([$1], [ext], [], [dnl
-  if test x$ac_success = xno; then
-    for switch in -std=c++11 -std=c++0x; do
-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx11_$switch])
-      AC_CACHE_CHECK(whether $CXX supports C++11 features with $switch,
-                     $cachevar,
-        [ac_save_CXXFLAGS="$CXXFLAGS"
-         CXXFLAGS="$CXXFLAGS $switch"
-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_11_testbody])],
-          [eval $cachevar=yes],
-          [eval $cachevar=no])
-         CXXFLAGS="$ac_save_CXXFLAGS"])
-      if eval test x\$$cachevar = xyes; then
-        CXXFLAGS="$CXXFLAGS $switch"
-        ac_success=yes
-        break
-      fi
-    done
-  fi])
-
-  if test x$ac_success = xno; then
-    AC_MSG_ERROR([*** A compiler with support for C++11 language features is required.])
-  fi
-])
diff --git a/src/makefile.am b/src/makefile.am
index b9b7da0..99ccb00 100644
--- a/src/makefile.am
+++ b/src/makefile.am
@@ -1,6 +1,6 @@
 bin_PROGRAMS          = simple-mtpfs
-simple_mtpfs_CXXFLAGS = -Wall -pedantic $(FUSE_CFLAGS) $(LIBUSB1_CFLAGS)
-simple_mtpfs_CPPFLAGS = -DFUSE_USE_VERSION=28
+simple_mtpfs_CXXFLAGS = $(FUSE_CFLAGS) $(LIBUSB1_CFLAGS) $(AM_CXXFLAGS)
+simple_mtpfs_CPPFLAGS = -DFUSE_USE_VERSION=28 $(AM_CPPFLAGS)
 simple_mtpfs_LDADD    = $(MTP_LIBS) $(FUSE_LIBS) $(LIBUSB1_LIBS)
 simple_mtpfs_SOURCES  =                 \
 	simple-mtpfs-fuse.h             \
